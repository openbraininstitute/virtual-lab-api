"""Timestamps

Revision ID: 5d5fc00c5997
Revises: 4c6f1051dc93
Create Date: 2025-02-01 07:54:03.539064

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5d5fc00c5997"
down_revision: Union[str, None] = "4c6f1051dc93"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Update `updated_at` columns to copy `created_at` where `updated_at` is null
    op.execute(
        """
        UPDATE notebook
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE payment_method
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE project
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE project_invite
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE project_star
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE virtual_lab
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    op.execute(
        """
        UPDATE virtual_lab_invite
        SET updated_at = created_at
        WHERE updated_at IS NULL;
    """
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "bookmark",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "notebook",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "payment_method",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "payment_method",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project_invite",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project_invite",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project_star",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "project_star",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "virtual_lab",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "virtual_lab",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "virtual_lab_invite",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "virtual_lab_invite",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "virtual_lab_topup",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "virtual_lab_topup",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "virtual_lab_invite",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "virtual_lab_invite",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "virtual_lab",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "virtual_lab",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project_star",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project_star",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project_invite",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project_invite",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "project",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "payment_method",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "payment_method",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "notebook",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "bookmark",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        nullable=True,
    )
    # ### end Alembic commands ###
