"""standalone payment attach to vlab

Revision ID: 62216ef51974
Revises: 294486398197
Create Date: 2025-03-15 14:33:02.539460

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "62216ef51974"
down_revision: Union[str, None] = "294486398197"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First check if the column exists, if not add it
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col["name"] for col in inspector.get_columns("subscription_payment")]

    if "virtual_lab_id" not in columns:
        # Add the virtual_lab_id column first
        op.add_column(
            "subscription_payment",
            sa.Column("virtual_lab_id", UUID(as_uuid=True), nullable=True),
        )

        # Add foreign key constraint
        op.create_foreign_key(
            "fk_subscription_payment_virtual_lab_id",
            "subscription_payment",
            "virtual_lab",
            ["virtual_lab_id"],
            ["id"],
        )

        # Create index
        op.create_index(
            op.f("ix_subscription_payment_virtual_lab_id"),
            "subscription_payment",
            ["virtual_lab_id"],
            unique=False,
        )
    else:
        # If column exists, just alter it to be nullable
        op.alter_column(
            "subscription_payment",
            "virtual_lab_id",
            existing_type=sa.UUID(),
            nullable=True,
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Don't remove the column in downgrade, just make it not nullable if it exists
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col["name"] for col in inspector.get_columns("subscription_payment")]

    if "virtual_lab_id" in columns:
        op.alter_column(
            "subscription_payment",
            "virtual_lab_id",
            existing_type=sa.UUID(),
            nullable=False,
        )
    # ### end Alembic commands ###
