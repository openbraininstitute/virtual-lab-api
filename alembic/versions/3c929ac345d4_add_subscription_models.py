"""add subscription models

Revision ID: 3c929ac345d4
Revises: ac787ad90af8
Create Date: 2025-03-09 18:15:40.436243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c929ac345d4'
down_revision: Union[str, None] = 'ac787ad90af8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stripe_user',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('stripe_costumer_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_costumer_id')
    )
    op.create_table('subscription_tier',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('stripe_product_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('sanity_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_monthly_price_id', sa.String(length=255), nullable=True),
    sa.Column('monthly_amount', sa.Integer(), nullable=False),
    sa.Column('monthly_discount', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('stripe_yearly_price_id', sa.String(length=255), nullable=True),
    sa.Column('yearly_amount', sa.Integer(), nullable=False),
    sa.Column('yearly_discount', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('plan_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_product_id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('virtual_lab_id', sa.UUID(), nullable=True),
    sa.Column('subscription_type', sa.String(length=50), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'PAST_DUE', 'UNPAID', 'CANCELED', 'INCOMPLETE', 'INCOMPLETE_EXPIRED', 'PAUSED', name='subscriptionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['virtual_lab_id'], ['virtual_lab.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_status'), 'subscription', ['status'], unique=False)
    op.create_index('ix_subscription_status_period_end', 'subscription', ['status', 'current_period_end'], unique=False)
    op.create_index(op.f('ix_subscription_user_id'), 'subscription', ['user_id'], unique=False)
    op.create_index(op.f('ix_subscription_virtual_lab_id'), 'subscription', ['virtual_lab_id'], unique=False)
    op.create_table('free_subscription',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['subscription.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paid_subscription',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_price_id', sa.String(length=255), nullable=False),
    sa.Column('customer_id', sa.String(length=255), nullable=False),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('billing_cycle_anchor', sa.DateTime(), nullable=True),
    sa.Column('default_payment_method', sa.String(length=255), nullable=True),
    sa.Column('latest_invoice', sa.String(length=255), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('interval', sa.String(length=50), nullable=False),
    sa.Column('cancellation_reason', sa.String(length=300), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['subscription.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_paid_subscription_customer_id'), 'paid_subscription', ['customer_id'], unique=False)
    op.create_index(op.f('ix_paid_subscription_stripe_subscription_id'), 'paid_subscription', ['stripe_subscription_id'], unique=True)
    op.create_table('subscription_payment',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_charge_id', sa.String(length=255), nullable=True),
    sa.Column('card_brand', sa.String(length=50), nullable=False),
    sa.Column('card_last4', sa.String(length=4), nullable=False),
    sa.Column('card_exp_month', sa.Integer(), nullable=False),
    sa.Column('card_exp_year', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('SUCCEEDED', 'PENDING', 'FAILED', 'REFUNDED', 'PARTIALLY_REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('invoice_pdf', sa.String(length=255), nullable=True),
    sa.Column('receipt_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('standalone', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_payment_customer_id'), 'subscription_payment', ['customer_id'], unique=False)
    op.create_index(op.f('ix_subscription_payment_status'), 'subscription_payment', ['status'], unique=False)
    op.create_index(op.f('ix_subscription_payment_stripe_invoice_id'), 'subscription_payment', ['stripe_invoice_id'], unique=False)
    op.create_index(op.f('ix_subscription_payment_subscription_id'), 'subscription_payment', ['subscription_id'], unique=False)
    op.drop_constraint('virtual_lab_stripe_customer_id_unique', 'virtual_lab', type_='unique')
    op.drop_column('virtual_lab', 'stripe_customer_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('virtual_lab', sa.Column('stripe_customer_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint('virtual_lab_stripe_customer_id_unique', 'virtual_lab', ['stripe_customer_id'])
    op.drop_index(op.f('ix_subscription_payment_subscription_id'), table_name='subscription_payment')
    op.drop_index(op.f('ix_subscription_payment_stripe_invoice_id'), table_name='subscription_payment')
    op.drop_index(op.f('ix_subscription_payment_status'), table_name='subscription_payment')
    op.drop_index(op.f('ix_subscription_payment_customer_id'), table_name='subscription_payment')
    op.drop_table('subscription_payment')
    op.drop_index(op.f('ix_paid_subscription_stripe_subscription_id'), table_name='paid_subscription')
    op.drop_index(op.f('ix_paid_subscription_customer_id'), table_name='paid_subscription')
    op.drop_table('paid_subscription')
    op.drop_table('free_subscription')
    op.drop_index(op.f('ix_subscription_virtual_lab_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_user_id'), table_name='subscription')
    op.drop_index('ix_subscription_status_period_end', table_name='subscription')
    op.drop_index(op.f('ix_subscription_status'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_table('subscription_tier')
    op.drop_table('stripe_user')
    # ### end Alembic commands ###
