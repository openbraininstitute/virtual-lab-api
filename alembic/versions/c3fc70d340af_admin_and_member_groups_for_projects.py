"""Admin and member groups for projects

Revision ID: c3fc70d340af
Revises: 49016d5a3d53
Create Date: 2024-03-13 10:02:30.734191

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c3fc70d340af"
down_revision: Union[str, None] = "49016d5a3d53"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("project", sa.Column("admin_group_id", sa.String(), nullable=False))
    op.add_column("project", sa.Column("member_group_id", sa.String(), nullable=False))
    op.drop_constraint("project_kc_project_group_id_key", "project", type_="unique")
    op.create_unique_constraint(
        "unique_member_group_id", "project", ["member_group_id"]
    )
    op.create_unique_constraint("unique_admin_group_id", "project", ["admin_group_id"])
    op.drop_column("project", "kc_project_group_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project",
        sa.Column(
            "kc_project_group_id", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint("unique_member_group_id", "project", type_="unique")
    op.drop_constraint("unique_admin_group_id", "project", type_="unique")
    op.create_unique_constraint(
        "project_kc_project_group_id_key", "project", ["kc_project_group_id"]
    )
    op.drop_column("project", "member_group_id")
    op.drop_column("project", "admin_group_id")
    # ### end Alembic commands ###
