{
  "id": "44c16159-b5cc-4c01-8215-86472829df34",
  "realm": "obp-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 86313600,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 86313600,
  "ssoSessionMaxLifespan": 86313600,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 86313600,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "50787f7f-3621-4a7b-9f61-45856d7db58d",
        "name": "default-roles-obp-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "44c16159-b5cc-4c01-8215-86472829df34",
        "attributes": {}
      },
      {
        "id": "f070e2e1-9494-4867-b850-de1127f74bb4",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "44c16159-b5cc-4c01-8215-86472829df34",
        "attributes": {}
      },
      {
        "id": "0890bbf4-444b-4871-be22-d23279d890da",
        "name": "uma_authorization",
        "composite": false,
        "clientRole": false,
        "containerId": "44c16159-b5cc-4c01-8215-86472829df34",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "93f6d256-f370-4c25-84dd-362852ae694d",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "34f2f1d5-4147-4737-8834-09267be68fbd",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "4c583d2d-722f-4f5a-b363-7e8936a4509e",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "69996fcb-7020-474c-b741-014d8c2b8278",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "8c4dd82c-38d4-4d9e-9f32-f65057564b26",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "acc07c35-4307-4137-ab44-f705f0057a53",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "8a0c4407-1988-4747-808a-1c31a71bd838",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "12a7e3b1-add6-4f8d-8f10-80b0a23f4ae9",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "3797c4d5-653b-489d-8ca5-ee5628e165a7",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "c3a60615-7938-4ecf-9e64-ca0994073ba3",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "2a761687-bbc3-4d72-b1a7-c424232ed586",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "0e903484-617f-44e9-9a8f-d447c5452b07",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "a782d22f-21cc-4218-a5c7-f6274d555b19",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "cc764c2d-6b87-4363-9963-323caaeddb1d",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "bf6564cb-5252-4e00-a2a8-6aac05913e89",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "query-realms",
                "view-realm",
                "query-groups",
                "query-users",
                "view-users",
                "create-client",
                "impersonation",
                "manage-events",
                "view-clients",
                "query-clients",
                "manage-realm",
                "manage-clients",
                "view-identity-providers",
                "manage-authorization",
                "view-authorization",
                "manage-identity-providers",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "5a0d3194-465d-4ac3-8212-bbbff3fce6d0",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "dc086fe0-9cc3-4ff5-baa5-b5d291789b84",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "36c88020-72f9-4940-80e8-45af1d9c32dc",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        },
        {
          "id": "551384ba-a91e-4124-894f-9d836a4eb93c",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "obpapp": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "2ca35703-d380-4997-ad3c-c4167fd598a0",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "ffa49246-7eba-4ef6-a299-ccd72a3ab32b",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "bc384ad3-6a2e-4a40-a314-7bdc8defbc83",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "3689a4f7-f720-46b1-a12e-afa69f869aeb",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "5430a30f-08c4-49ab-ae17-9271059da39c",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "f9bd47a7-4b00-4899-8085-6f09839af746",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "f0db98d6-8204-4f28-acf3-7c7bdfd17cc5",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "f9ba7a2e-d87f-40ec-a27d-d55668b46400",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "8c0d5316-6188-4370-ba3c-42c179fde4ce",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        },
        {
          "id": "5890220a-e4ec-4436-b75c-8ae83fd59749",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "50787f7f-3621-4a7b-9f61-45856d7db58d",
    "name": "default-roles-obp-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "44c16159-b5cc-4c01-8215-86472829df34"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "service-account-obpapp",
      "username": "service-account-obpapp",
      "emailVerified": true,
      "createdTimestamp": 1599128504161,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "obpapp",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "clientRoles": {
        "realm-management": [
          "manage-users",
          "query-realms",
          "query-groups",
          "create-client",
          "manage-events",
          "manage-realm",
          "manage-clients",
          "manage-authorization",
          "view-realm",
          "query-users",
          "view-users",
          "impersonation",
          "view-clients",
          "query-clients",
          "view-identity-providers",
          "realm-admin",
          "view-authorization",
          "view-events",
          "manage-identity-providers"
        ],
        "broker": [
          "read-token"
        ],
        "account": [
          "view-groups",
          "manage-consent",
          "manage-account",
          "view-profile",
          "delete-account",
          "view-consent",
          "manage-account-links",
          "view-applications"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test",
      "firstName": "test",
      "lastName": "test",
      "email": "test@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311988958,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579448,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-1",
      "firstName": "test-1",
      "lastName": "test-1",
      "email": "test-1@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311988958,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579448,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-2",
      "firstName": "test-2",
      "lastName": "test-2",
      "email": "test-2@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311988958,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579448,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-3",
      "firstName": "test-3",
      "lastName": "test-3",
      "email": "test-3@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311989968,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579548,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-4",
      "firstName": "test-4",
      "lastName": "test-4",
      "email": "test-4@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311990968,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579648,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-5",
      "firstName": "test-5",
      "lastName": "test-5",
      "email": "test-5@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311991968,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579748,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-6",
      "firstName": "test-6",
      "lastName": "test-6",
      "email": "test-6@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311992968,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579848,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "username": "test-7",
      "firstName": "test-7",
      "lastName": "test-7",
      "email": "test-7@test.com",
      "emailVerified": true,
      "createdTimestamp": 1578311993968,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1710853579948,
          "secretData": "{\"value\":\"BwCJ4By3F46GmWtpJml6aLDTmIwBwaKYL1+q6ILRLUOMLzfk6P0PMkvbjyKMdfv+jBQ0czZuCZNFoIg+sAUE1A==\",\"salt\":\"k4IdhhKonpZ7slbuBjrHPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "6a440f42-e1e6-4dc1-859f-fa7564ddb67a",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/obp-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/obp-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1466c4b9-0ca0-4958-9883-b53ed44eae3e",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/obp-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/obp-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "26df9151-342a-4051-8d61-5f4a520566fa",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "454853be-6fc6-42b8-867a-a1509b5ee07b",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ffa49246-7eba-4ef6-a299-ccd72a3ab32b",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "61fce7f7-0eda-486b-a6de-b65e9bc2ccf8",
      "clientId": "obpapp",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "obp-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "003fcdf0-0ea9-4664-99fe-e47d76e41632",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "af27c0fb-eb18-4853-bc28-361b7f7dcdfe",
          "name": "Groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a713f077-c0ea-409c-9b74-fe4916bde5ea",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7ce4fd7d-37ea-450d-817f-d19a77c0cec7",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "70f6a0ca-7629-41c6-a89d-a0d7dab90f9b",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8b0ccc45-0dc5-46f1-9b87-cc5a051e8fda",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/obp-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/obp-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c8c7f49f-edd2-47d5-a8ab-4c3c9d3f6727",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "8105b451-ffbc-4750-bee0-cc8bff151d30",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ddb0840c-4c61-4a9f-b6b0-82314cf57872",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "613fcc27-b16a-4494-8d92-066c69b25b42",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "072657fc-9d96-4cc4-b8ae-4d890927b265",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d480f5d6-daf4-46e9-bfaa-df4f78fe2424",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2371330e-0299-4e02-b66d-69614ada8d0e",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "91982830-2b56-4ac4-b2a4-7769653ee4d1",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a03a94ba-65db-4164-ba54-4bf017411f23",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "0920943b-32ec-4e2c-b990-e2070a71a4d2",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e9a0ecc6-68a4-4b2b-897e-4d0b3c68d4c5",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "da894279-f1fa-442b-8137-dc57bc16a2a4",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "5b407f40-1e51-4a7b-bd6d-56c6af2665cc",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "befe95ec-3a5e-4450-a18a-81e3a75001ea",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0de692ee-32d2-4a74-ac76-7a2aefc28dc4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "593ce782-46c1-48f2-b688-6766dc316759",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "5bededb5-c1dc-4f50-93e1-079c40d985c4",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "57659fcf-e910-4f34-8716-9f5b25447da4",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c32d8eb2-496e-4485-b04e-a63c0ac44179",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0bf6ca0b-0cb7-40ae-a44b-7dd34f42a63f",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "7707a260-4da5-436e-a1bf-b174c910164e",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5d8e4ce1-2710-47ec-b98c-a38143cb9a95",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3f02bce-1dcf-4552-aa3a-b654ac67b987",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e22e38c6-84fa-4a80-b97e-cb1fe4cb9531",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "035b1463-45df-4e97-92ed-695c446e8349",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "65743381-fcaf-4bd4-adae-25c3c51d224f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "502eb622-8f55-48d7-ba0b-1f33a91e067b",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f5021f74-be03-4e5a-b776-4fb14d3ae6da",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ae8cc67-dc00-44f2-ae7b-e0e9502dd232",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "9f672016-c6cf-478f-b699-e8197a096c79",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3fb2466-7aec-434f-ba56-55c8066e2fdd",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "ef31ea2d-0a6d-4605-a843-e660e141af8c",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f037bef-6251-4dd2-8854-e382d633d4dd",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c371f16a-500f-4fb2-899b-8b09d26359aa",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08eb2690-20c3-4d7d-a6c2-1d52d79307ee",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "11bb01f1-8929-48d3-be10-8e0ab40816d8",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f34340a9-baa0-40af-89f6-bc5177bb91d8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cbf583c3-1749-4f56-b574-106cddc562e1",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "2bcd0951-f3e4-493f-ab77-b2be08ce1dd9",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "d4233b77-5ce6-4844-8e46-6227ff438afb",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "72c7c5b1-c3b4-4657-a393-21202d13695b",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "b5a79893-411a-4dff-b40f-971f6354c0e0",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "efd5ea5a-2c89-47a2-8c76-9a8cdcb1d86f",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "eaf95d61-9158-42b4-83bb-6968a99a177f",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "74a446a6-1b74-41bc-ae16-5d9701734997",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "1a361f5c-0ab7-4b53-a887-61a73a2eed7f",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8a60feed-08f9-4503-b424-b7faa3e229d3",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA49KAroQ0kUkA6z5gSTB5QlY72TvNjAG55T6LBfWMmpM33dkZJ5rsRyFvbtsmELy7sBfC+LqTgH/pWyAZXSICGHFshkcUnFDg3a5oibRLt5C1MJuQA42dSov7vR4CyBgmVtvXIVPpUofk0tE3EgG2z/OitI6Nc4pD3I6Q87flX7yAOgdkVUU3PRbCAWE7umZRaMouiznSlOEtY/GGUwGuvSUMohN+1W2xwXuJ2lxPMyXHlv1FNwHXlE5o4Ldc2GTqtcaJ2R8A0bintcdMX/Be494h3rDYdKfs4vA8P9snEcGDJiYa46mNalhjmp8YHIhyhOqWchdquG1oFKnvl633AQIDAQABAoIBACA7T+lg2u8THQYrNQQlz4ILITyCsXn1ZI+CYbjeHJ5h5a2FYYGw8Wy+1j0g1CnaCdPICNWXz/aGIkW6LNx4S0OaCHiW5duXtbinTDLvRycZWgkeeSmHh5FcbKk87bfRctsnDzCv5nq+rykEYH4zr+GL3qEc6fZGwYMayHcytUjt5eoZT6jNB1t1044cr6fhC4r2ukwB1fKUcJDgjNIIQQpL9uRIm3WF6vzQ9ioNcaW/qArFuM8Xx7ZwFR2Aw0CS4tBBXvxD8HV8HXif7nn1jMR1eDAnbc1jA2y7oRVDVyJE1nYb+PZFuw1NVSc1uEysr7DgxX7Pw+k0oVQ/wE2R8mECgYEA/hGnx/HJ3cH7xTyY1/Na67dJqpSkV0LMuCoXta5pJBO444FB3V+g1VpGRd7AQfgAj1qcoJParvDzYYbnT4RlsZillWh0eRuTTmBHcjucNjuvEj26MxX6CV/n7FglsOclXTFTRmmGZ8tJ+jHqK9EyMifUFY4CiyRTB2GRQYdddQsCgYEA5Y3HYEA7gsWeqLm7a2HcsnLuJcr02RKfFXAoEfPAb6Td4Y5jo7h3ztqeiwXkLWQxbde3yrd1KZIh8YzlA8saTD5dt8NqWC7XS/NHjXG/GZTnzzKItEG4sH7co1+GSvChNVYqGm8hH1paGxeQfcnDd24VOR3Oju41CMPafKkZ86MCgYAjPE2ZlDXb1GhXbVUBNhXY9P15c83q8C+2JthM8RhR0Y5ltupsijOjAzcVv5PIUl25g+aO+pJsiqwmTXBM/d6gp7vnIaptlV5zkzS1agD7IIHiNL9bEGQx4qQmif8ILrZm201iSYZDZNUopr2EQCoG/LEUIDLIG0yMjIJ5pQ1YCwKBgQCpdzefSQwmCLqOmT9RkRea7dn+MIz9zA+BhiEuz6JbSX08TSAl98MLBL5Sp/DBydvr2XsnvrRSEj3Y00kmucQaUVhil3Nk0n/C5EEInNaVjiZsAkSFvpcYRS+htJ2xqV95vriqdywet1cZ9RWIp3EUNEKavfSF9DlW1S/xI+2yvQKBgCSj4jCAyB/siVMbQ3IHLUXeknJHUsH6bTIlK3o5hvS7JM8PPFmqGdO0hDQ/AlzJYcVRKX4SS7/+/mrQVJWNedl66Jfk0/RlcjAK8yHykcCM2FdPCeKc7VFL3DRN5sqRmryTcScwYoV3+WW/A4in3e6cImISS9BfBr9bocdAPc57"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGOVtBcTzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlvYnAtcmVhbG0wHhcNMjQwMzE5MTMwMjU5WhcNMzQwMzE5MTMwNDM5WjAUMRIwEAYDVQQDDAlvYnAtcmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDj0oCuhDSRSQDrPmBJMHlCVjvZO82MAbnlPosF9Yyakzfd2RknmuxHIW9u2yYQvLuwF8L4upOAf+lbIBldIgIYcWyGRxScUODdrmiJtEu3kLUwm5ADjZ1Ki/u9HgLIGCZW29chU+lSh+TS0TcSAbbP86K0jo1zikPcjpDzt+VfvIA6B2RVRTc9FsIBYTu6ZlFoyi6LOdKU4S1j8YZTAa69JQyiE37VbbHBe4naXE8zJceW/UU3AdeUTmjgt1zYZOq1xonZHwDRuKe1x0xf8F7j3iHesNh0p+zi8Dw/2ycRwYMmJhrjqY1qWGOanxgciHKE6pZyF2q4bWgUqe+XrfcBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAfyOYg3mrW7kzvANCpEhMsiYeFu6vpmi3bRVo9Ygx7MitkIPxbh/5moJmnYIBW4Bxh2Ui7ZrVzivH9ClPi2lRgYEj59peTyZ0DZQHaVMmYcDv8K+EBtOcG5vfDTrD2QvQUrmFJjoZ7/KhikUf8Ts5ZMe2ByLqYUoTjMt8pCr1HK6lvPIgT3rPnW74EOnLUer6N8C3JWZSaLmBxzGV+2I3MhnLONh5rXFAGte0A4zWur0ZSz1i0NLx6NiLRxFETubBceUJz/Y/Ubh9vEs9Wk+CJ0Q3DBDzOIyrrIcEcIl18vEjvr4FQbXgzbcy5eDznTa2p1M9NAkjl7ZWvrk1BBuL4="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "c58db76f-a68f-44cd-8bdb-401fb89e7167",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "5ded26ef-f827-4909-97c8-169e7ffbefa1"
          ],
          "secret": [
            "JXEY6kyyhKlDyQPo3CwGWA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "002fbde5-1fc8-4404-8f8f-92406342ed5c",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA5pG7fde1AYVJdOMvAL6L/gbmhPq+woFLlSY8O7rcsKEIFxjV/42fozkTB1KZAcwGcCGYprj8zWc1gfFbPqLMFzU/RuYr5STLNrMyv8vvU8XiAgb8iN11yuU0TTcrFMkGw1145dYO8eNscTXnGF6fzccRuETfGOJ9PdDyJg9/RECWD9DisQiZ0tLIIHWZJPN7Ez/98HpCWDUSVcuVSSEcpTa+s1q855zHblE7RC7V+touapG87CgQFgHsOCrCzVEE3sZJrk+PMMqQqr6t/8Sa5OVt4s8U4PJ/Wt5VRn+ug2gHhjtm133RZbhp12KhZhyj8x1D5xB/0YQiqCICB9qg1wIDAQABAoIBADLRZvYXD21835JUKj1rQfaktbUUgOvkzHBco4T0rASAEYTps+zl3Yv/ndqM0W1sdvTK6tbASfPJrijsNdSp0/q/gSlSvNT91Y5CU8qjG6YmpKgWux09VmN4Ph1Qrf2gSw3PMcDSe6vDmNig7UTZQjZ8DENFZriY3sq7nUtXOhEkEd2NTgIbtXrnlf1qpYloYNog8jyHmFE7KEs5Km+UtkrnOY0uIeLwYQYaKRyl7/YahalnOfqQu7UNfznaZY9W61Qv/lNSllcsbJuI71TcqrIUcEL7seSOvpIK2xrUG1FsKRC2CSZ9svvwmv20bIPmGmHxuWRdop09vkYlgE8SiekCgYEA/YVrrJEVyTwxLlbEHlvuCpzxvOedG72POGvhfNThYPG/xsWGPS3V0Wzl4btns67t/FWZflh+2hCugwmXk5G4mP8y49eVOXhV2vA0e8eY5QIE9w14PQACurUE6Bnat78rmqV4e+nWgkPUBnpNg/LerUsHrxprmu9pdLBW7zWyKRkCgYEA6NLcmfXF0si3Hks8uKV89WuGWYmAHdfYieD0x5jskfqhk0yponhrPHa0+eeBqGfmEVA6g0rnfmM8hoitMc6rjyq07fRqW1xV+2hLouWkwfOELuxzZ/ZVrpqtIAyo0y/lE+JYh2eAfL+7TrOyQtTFCNAeYjUcphfBGS0nAOkYJ28CgYARJgI3hQTVPNYSzVmsuAks/Jq5bW1KIBNc/Kce+4NXPGL9fgTrhHsvFE+kajnEhLOiWuPsEO5br78uK+rt13CGINT/Zmi4n3QnQBI8wS6NZwqQ739PmP2WRYJUdNM/lJXNex3gO9v/qbjgy0sM/tOjIy0c4gufSkx20SrAOYCYmQKBgHUwJX+NGJyHELy7y/14tpPlIkORFR5wVXrY8vxAOdskVw2ISd4QVJGjgmZDI5z7Zu8R/dG18x1Hn+BrjRmD2BCAw37+RkZkDJc1oNSGWE6TXtYrh88tS2VOT5PRK2zZL6m5hSvqad7gtsvfYPuIkwBjmNd/ukLTtAsTEg3ARbsbAoGBAKIOyykqPBdvMMnUQeEDJLcvRIxcA1kCWhDn6FhiyWwl3sCWhPpeadhHizb5eX9Xq9TGZmHO0JN3lJyar6ZXEHLqmzOAzl4Ah9+HmcamzHtTDUX7iMRgfo3qYDRcP6494TmA5y/p17lgt6qS5efEkoFkbHehH5qxHTsjtPTkFPts"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGOVtBdHTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlvYnAtcmVhbG0wHhcNMjQwMzE5MTMwMjU5WhcNMzQwMzE5MTMwNDM5WjAUMRIwEAYDVQQDDAlvYnAtcmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDmkbt917UBhUl04y8Avov+BuaE+r7CgUuVJjw7utywoQgXGNX/jZ+jORMHUpkBzAZwIZimuPzNZzWB8Vs+oswXNT9G5ivlJMs2szK/y+9TxeICBvyI3XXK5TRNNysUyQbDXXjl1g7x42xxNecYXp/NxxG4RN8Y4n090PImD39EQJYP0OKxCJnS0sggdZkk83sTP/3wekJYNRJVy5VJIRylNr6zWrznnMduUTtELtX62i5qkbzsKBAWAew4KsLNUQTexkmuT48wypCqvq3/xJrk5W3izxTg8n9a3lVGf66DaAeGO2bXfdFluGnXYqFmHKPzHUPnEH/RhCKoIgIH2qDXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAOAgXgPlceuYz0v2ue5BgIo9OLoF7YNKzfY1jXhtQHy2NDj1n5kCn8jn0lxdBVpWDZngqODwdkPi9IfrLdtUcxgn2li1xBGMN03wtWngCMj/LLoFOZIxv89EbCWqJTHOqjGCeL3Yrpwo13y5ilgbeDf6DXFZ+kbH+I09dQviPafY/KmlWFFdsTf73ug5UJtZR1Yd8yd7ogvKNPY70PBgzagBrJ9C9hIDSKlpHuWGa2nnzplnDW/b/Vz+A5FvLGYPTrRtFNRq7MBXrVpWtiDE948f4mWZl5sJWrcsAJRavRJEBln4sTKSKTdL2QYD1JQfov5yG7XBmiV16B4ibwsiY5Y="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "dc2dc361-a71d-43f7-b3e5-0c8a55d7b3c5",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "763edf6d-02c3-4744-aae1-3ff731ed73bf"
          ],
          "secret": [
            "nCJfnu6eovlx2vyzHXa3LTMDrX4MA3fFuDgcKI163m17Xazql5G4yWpY2mf05CERppjnv24Eg6gdyDsnTi-7jy8L_gn1JYBCKPI_3R_DBiZYouaSyldUrsjjpTgAYF4LyIOaKnYu2L5mRrkQA1QDQG_m4nZsjsdOCaVI5LnPn_8"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "4b38123f-e6dc-4a70-982e-e4f24383ab2e",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a3a9a095-a742-4a90-9997-474a03acd038",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e7a51ebb-ef6b-4953-bd0a-da7cf7097fcd",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f066832-8478-4e8b-be96-4be169b97a1a",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "193252d5-f269-497e-9064-9f6f88b2b252",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0fb0e015-9a4a-4d72-a1e3-c1ae7072072d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24bd88a3-6a46-424f-bb91-cbdafc1056fb",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fd47564e-67ea-481c-a82f-bb491f1b1bfd",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a0a211ce-6877-40d8-805b-09a0f3e0fe57",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9bb475f8-ffe8-4daf-bd2c-19ff8bfa0121",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6115fd3a-d90d-44f6-b3ba-f9827069a3a1",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bcbbb6f4-3980-432d-9867-7ef27565f7c5",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "77530745-4299-4597-96d8-4df144331e42",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e775efbc-81d4-4b9d-9ace-04645555e633",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8fc2e157-ae77-476b-b6c4-3c68a1c1cf27",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6e3f7c06-670b-4137-b254-4feb26696b42",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e387f970-03bc-4133-ad3f-21ea2ab0df1f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ba843263-0cbe-47dd-8edf-2052174a4822",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "e25a26d4-92be-4f31-9afc-1f307de28166",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "a9abfc14-73d4-4328-92ea-68eb6cca6021",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}